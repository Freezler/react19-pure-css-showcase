/* ‚ú® Reusable Card Component System */
@layer components {
  
  /* üéØ SYSTEMATIC BORDER RADIUS GUIDE
   * --radius-xs: 2px    - tiny badges, indicators
   * --radius-sm: 4px    - small buttons, chips  
   * --radius-md: 8px    - inputs, small cards
   * --radius-lg: 12px   - default buttons, card icons
   * --radius-xl: 16px   - default cards, large buttons
   * --radius-2xl: 24px  - feature cards, hero elements
   * --radius-3xl: 32px  - extra large components
   * --radius-full: ‚àû    - circular elements
   */
  
  /* üèóÔ∏è Base Card Structure */
  .card {
    --card-bg: var(--color-surface);
    --card-border: var(--color-outline-variant);
    --card-shadow: var(--shadow-sm);
    --card-shadow-hover: var(--shadow-md);
    --card-radius: var(--radius-xl);
    --card-padding: var(--space-lg);
    --card-gap: var(--space-md);
    --card-transition: all var(--transition-standard) cubic-bezier(0.4, 0, 0.2, 1);
    
    background: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: var(--card-radius);
    box-shadow: var(--card-shadow);
    padding: var(--card-padding);
    display: flex;
    flex-direction: column;
    gap: var(--card-gap);
    transition: var(--card-transition);
    position: relative;
    overflow: hidden;
    container-type: inline-size;
    container-name: card;
    
    /* Reset button styles when used as interactive card */
    &[type="button"] {
      border: 1px solid var(--card-border);
      font: inherit;
      text-align: left;
      cursor: pointer;
      width: 100%;
    }
  }

  /* üé® Card Variants */
  .card--default {
    /* Default styling already applied in base */
  }

  .card--feature {
    --card-padding: var(--space-xl);
    --card-radius: var(--radius-2xl);
    border-left: 4px solid transparent;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, 
        var(--color-primary) 0%, 
        var(--color-secondary) 50%,
        var(--color-success) 100%);
      transform: scaleX(0);
      transform-origin: left;
      transition: transform var(--transition-standard) ease;
    }
    
    &:hover::before {
      transform: scaleX(1);
    }
    
    &:hover {
      border-left-color: var(--color-primary);
    }
  }

  .card--tech {
    --card-bg: linear-gradient(135deg, 
      var(--color-surface) 0%, 
      var(--color-surface-variant) 100%);
    
    .card__icon-bg {
      background: oklch(from var(--color-primary) l c h / 0.1);
    }
  }

  .card--stat {
    text-align: center;
    --card-padding: var(--space-xl);
    
    .card__content {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--space-sm);
    }
  }

  .card--info {
    --card-bg: oklch(from var(--color-primary) l c h / 0.02);
    --card-border: oklch(from var(--color-primary) l c h / 0.1);
  }

  /* üìè Card Sizes with Systematic Border Radius */
  .card--sm {
    --card-padding: var(--space-md);
    --card-gap: var(--space-sm);
    --card-radius: var(--radius-lg);
  }

  .card--md {
    /* Default size already applied - uses --radius-xl */
  }

  .card--lg {
    --card-padding: var(--space-xl);
    --card-gap: var(--space-lg);
    --card-radius: var(--radius-2xl);
  }

  .card--xl {
    --card-padding: var(--space-2xl);
    --card-gap: var(--space-xl);
    --card-radius: var(--radius-3xl);
  }

  /* üì± Full width variant for mobile stats */
  .card--full-width {
    width: 100%;
    min-width: 0;
  }

  /* üñ±Ô∏è Interactive States */
  .card--interactive {
    cursor: pointer;
    position: relative;
    overflow: hidden;
    
    /* Hover glow effect */
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background: linear-gradient(135deg, 
        oklch(from var(--color-primary) l c h / 0.05),
        oklch(from var(--color-secondary) l c h / 0.03));
      opacity: 0;
      transition: opacity var(--card-transition);
    }
    
    &:hover {
      --card-shadow: var(--card-shadow-hover);
      transform: translateY(-2px);
      --card-border: oklch(from var(--color-primary) l c h / 0.3);
    }
    
    &:focus-visible {
      outline: 2px solid var(--color-primary);
      outline-offset: 2px;
    }
    
    &:active {
      transform: translateY(-1px) scale(1.005);
    }
  }

  /* üèóÔ∏è Card Structure Components */
  .card__header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--space-md);
  }

  .card__header-main {
    display: flex;
    align-items: flex-start;
    gap: var(--space-md);
    flex: 1;
    min-width: 0;
  }

  .card__header-content {
    flex: 1;
    min-width: 0;
  }

  .card__header-badge {
    flex-shrink: 0;
  }

  .card__icon-wrapper {
    position: relative;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .card__icon-bg {
    position: absolute;
    inset: 0;
    background: oklch(from var(--color-primary) l c h / 0.1);
    border-radius: var(--radius-lg);
    transition: var(--card-transition);
  }

  .card__icon {
    position: relative;
    z-index: 1;
    font-size: 1.5rem;
    color: var(--color-primary);
    transition: var(--card-transition);
  }

  .card:hover .card__icon-bg {
    background: oklch(from var(--color-primary) l c h / 0.2);
    transform: scale(1.05);
  }

  .card:hover .card__icon {
    transform: scale(1.1);
  }

  .card__content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
  }

  .card__footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-md);
    margin-top: auto;
  }

  /* üìù Typography Components */
  .card__title {
    font-weight: 600;
    color: var(--color-on-surface);
    line-height: var(--leading-tight);
    margin: 0;
  }

  .card__title--sm {
    font-size: var(--text-base);
  }

  .card__title--md {
    font-size: var(--text-lg);
  }

  .card__title--lg {
    font-size: var(--text-xl);
  }

  .card__title--xl {
    font-size: var(--text-2xl);
  }

  .card__description {
    color: var(--color-on-surface-variant);
    line-height: var(--leading-normal);
    margin: 0;
    font-size: var(--text-sm);
  }

  /* üì± Container Query Responsive Behavior */
  @container card (max-width: 300px) {
    .card__header {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }
    
    .card__header-main {
      flex-direction: column;
      align-items: center;
    }
    
    .card__icon-wrapper {
      margin-bottom: var(--space-sm);
    }
  }

  @container card (min-width: 400px) {
    .card--feature {
      --card-padding: var(--space-2xl);
    }
    
    .card__description {
      font-size: var(--text-base);
    }
  }

  /* üåô Theme Variations */
  [data-theme="dark"] .card {
    --card-bg: oklch(20% 0.02 250);
    --card-border: oklch(30% 0.02 250);
  }

  [data-theme="dark"] .card--tech {
    --card-bg: linear-gradient(135deg, 
      oklch(18% 0.02 250) 0%, 
      oklch(22% 0.02 250) 100%);
  }

  [data-theme="dark"] .card--info {
    --card-bg: oklch(15% 0.05 250);
    --card-border: oklch(25% 0.05 250);
  }

  /* ‚ôø Accessibility Enhancements */
  .card:focus-within {
    --card-border: var(--color-primary);
    box-shadow: var(--card-shadow-hover);
  }

  /* üé≠ Reduced Motion Support */
  @media (prefers-reduced-motion: reduce) {
    .card,
    .card__icon,
    .card__icon-bg {
      transition: none !important;
      animation: none !important;
    }
    
    .card--interactive:hover {
      transform: none;
    }
    
    .card:hover .card__icon-bg,
    .card:hover .card__icon {
      transform: none;
    }
  }

  /* üñ®Ô∏è Print Styles */
  @media print {
    .card {
      break-inside: avoid;
      box-shadow: none !important;
      border: 1px solid #ccc !important;
      background: white !important;
    }
    
    .card__icon {
      color: #333 !important;
    }
  }
}